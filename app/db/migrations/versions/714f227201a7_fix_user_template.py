"""Fix User Template

Revision ID: 714f227201a7
Revises: 947ebbd8debe
Create Date: 2023-10-29 13:45:03.223039

"""
from alembic import op
import sqlalchemy as sa
from config import SQLALCHEMY_DATABASE_URL


# revision identifiers, used by Alembic.
revision = '714f227201a7'
down_revision = '947ebbd8debe'
branch_labels = None
depends_on = None


def upgrade():
    if SQLALCHEMY_DATABASE_URL.startswith('sqlite') :
        # Add new columns with the desired data type
        op.add_column('user_templates', sa.Column('new_data_limit', sa.BigInteger, default=0))
        op.add_column('user_templates', sa.Column('new_expire_duration', sa.BigInteger, default=0))

        # Migrate data from old columns to new columns
        connection = op.get_bind()
        connection.execute("UPDATE user_templates SET new_data_limit = CAST(data_limit AS BIGINT)")
        connection.execute("UPDATE user_templates SET new_expire_duration = CAST(expire_duration AS BIGINT)")

        # Remove old columns
        op.drop_column('user_templates', 'data_limit')
        op.drop_column('user_templates', 'expire_duration')

        # Rename new columns to have the same names as the old ones
        op.alter_column('user_templates', 'new_data_limit', new_column_name='data_limit')
        op.alter_column('user_templates', 'new_expire_duration', new_column_name='expire_duration')
    else :
        # ### commands auto generated by Alembic - please adjust! ###
        op.alter_column('user_templates', 'data_limit', type_=sa.BigInteger)
        op.alter_column('user_templates', 'expire_duration', type_=sa.BigInteger)
        # ### end Alembic commands ###


def downgrade():
    if SQLALCHEMY_DATABASE_URL.startswith('sqlite') :
        # Add new columns with the old data type
        op.add_column('user_templates', sa.Column('old_data_limit', sa.Integer, default=0))
        op.add_column('user_templates', sa.Column('old_expire_duration', sa.Integer, default=0))

        # Migrate data from new columns to old columns
        connection = op.get_bind()
        connection.execute("UPDATE user_templates SET old_data_limit = CAST(data_limit AS INTEGER)")
        connection.execute("UPDATE user_templates SET old_expire_duration = CAST(expire_duration AS INTEGER)")

        # Remove new columns
        op.drop_column('user_templates', 'data_limit')
        op.drop_column('user_templates', 'expire_duration')

        # Rename old columns to have the same names as the new ones
        op.alter_column('user_templates', 'old_data_limit', new_column_name='data_limit')
        op.alter_column('user_templates', 'old_expire_duration', new_column_name='expire_duration')
    else:
        # ### commands auto generated by Alembic - please adjust! ###
        op.alter_column('user_templates', 'data_limit', type_=sa.Integer)
        op.alter_column('user_templates', 'expire_duration', type_=sa.Integer)
        # ### end Alembic commands ###
